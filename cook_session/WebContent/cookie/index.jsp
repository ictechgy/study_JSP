<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
</head>
<body>


쿠키
http프로토콜은 비연결성이다. 로그인을 한번 시도 할때만 로그인이 될뿐 다른 페이지를 요청하면 로그인은 끊긴다.
그래서 쿠키와 세션을 만들었다.
쿠키 - 서버에서 만들어서 클라이언트에게 넘겨주는 값. 식별값.. 아 너 로그인했구나 그럼 1이라는 쿠키를 줄게.
그러면 클라이언트는 1번쿠키를 가지고 있고 저 1번쿠키 가지고있어요! 하는 식. 그러면 페이지를 이동할때마다 로그인을 할 필요가 없어진다.
24시간동안 보지 않겠습니다.. 하는거 할때 쿠키 사용(24시간동안 안본다고 하면 24시간동안 유효한 쿠키를 주고 그 쿠키를 가지고있는동안에는 팝업창을 안띄우기)
자주 본 상품들 오늘 본 상품들 옆에 뜨는거

쿠키는 사용자에게 던져주므로 서버에서 모든 사용자를 관리하는 것이 아니므로 자원의 효율성이 있다.
세션은 서버에서 관리하는 값이다. 쿠키는 클라이언트에서 관리하므로 보안에 조금 취약하다.
누군가가 해킹을 해서 특정사람의 쿠키값을 가지고 있으면 그 쿠키를 가지고 그 웹사이트에 접근하여 해킹당한사람처럼 행세가능.
따라서 쿠키값으로는 로그인정보같은 중요정보를 두지 않는다. 그러한 것들은 세션으로 두고 서버에서 관리한다.

<p>

<h1 style='color:skyblue;'>CARE LAB</h1>
<h3>저희 사이트에 방문해 주셔서 감사합니다</h3>

웹브라우저에서 F12클릭 후 상단 Application메뉴를 클릭하면 왼쪽에 cookies존재. 지금은 단순히 그냥 서버에서 하나 넘겨주기만 했음.
식별값

쿠키는 쿠키라는 클래스를 이용한다.(서버에서 만들어서 던져주는 것이므로 JSP코드)
<%
	Cookie cookie = new Cookie("testCookie", "myCookie");  //쿠키이름과 value
	cookie.setMaxAge(5);  //얼마동안 이 쿠키를 살려둘거냐.. 5라는 값은 5초
	response.addCookie(cookie);  //사용자에게 던져주기(이 페이지가 요청받아진 경우 쿠키를 같이 보냄)
	//새로고침하면 다시 페이지 불러와지고 쿠키도 다시 생겼다가 5초뒤에 소멸
%>
사용자에게 쿠키가 있으면 ~페이지를 보여주지 않아도 되겠네
쿠키가 없으면 새로 접속했나보네~ 팝업창띄우기

쿠키는 이 페이지를 요청할때마다 계속 보내지게 됨

팝업창은 자바스크립트로 구현한다. 


쿠키가 있다면 팝업창을 안띄우기
<%
	boolean bool=false;

	Cookie[] cookieArr = request.getCookies();
	for(Cookie c : cookieArr){  //c라는 쿠키객체는 고유이름인 Name과 값 Value를 가지고 있는 것 같다. 그리고 그 멤버변수들은 private인걸까
		out.print("id : "+ c.getName()+"<br>");
		out.print("value : " + c.getValue()+"<br>");
		if(c.getName().equals("testCookie")){
			bool = true;  //이 방식은 for each문을 통해 원하는 쿠키가 존재하는지 존재하지 않는지를  쭈루룩 처음부터 끝까지 훑는 방식이다.. 그냥 다른 찾는 메소드를 쓸 수는 없을까? 아니면 배열이 아닌 Set List Map<k,v> 자료형을 쓸수는 없나?
		}					//굳이 반복문을 쓰지 않아도 찾는 쿠키가 있는지 없는지 볼 수 있도록..
	}						//Set List Map자료형에서 get이나 indexof같이 어떤 특정값을 찾는 메소드들은 그 정의가 반복문으로 이미 되어있는건가
%>
<% if (bool==false){ %>


<script>
	window.open("popup.jsp", "new", "width=300, height=200,top=500,left=500") 
				//위쪽에서 500, 왼쪽에서 500떨어진곳에 popup.jsp파일을 열게 만들것이다. 
				//new - 새창에 띄우겠다는 메시지. 없어도 새창에 띄워지기는 함. 의미적으로 사용할 뿐
</script>

<%} %>



자바스크립트문은 스크립틀릿 안에 들어갈 수 없어서 위처럼 작성

스크립틀릿(JSP)은 서버에서 처리하는거고 자바스크립트는 클라이언트에서 처리하기때문에 혼용하여 작성 불가.
스크립틀릿쪽만 서버에서 처리하고 던져주면 나머지는 클라이언트에서 처리


팝업쿠키를 팝업페이지에서 보내는건 안돼나
아 그렇게 하면 팝업페이지가 띄워진것뿐만으로 쿠키는 보내지고 다음에 페이지가 안뜨게되겠구나


현재 위와같이 작성하면 사용자가 가장 처음에 페이지에 접속할 때는 쿠키(testcookie)는 존재하지 않는다. 일단 페이지를 요청받았으니 서버는 이 페이지를 구성해 나아가는데, 쿠키를 먼저 조리해놓고(34번줄~39번줄)
52번에서 55번줄에서는 사용자가 가지고있던 쿠키를 불러와 출력한다. 당연히 처음접속이니 testcookie는 출력되지 않고, 기존에 가지고 있던 쿠키들만 작성해나아간다. 
해당하는 쿠키가 존재하지 않으니 56번줄에서의 조건식은 거짓이되고 bool변수의 값은 false로 유지된다. 따라서 61번줄~70번줄의 코드가 작동하게 되고 아래의 script문을 작동시켜라! 라고만 처리해두고 서버는 페이지를 클라이언트에 넘긴다.(쿠키도 같이)

-> 그러면 클라이언트는 쿠키와 해당페이지를 받고 팝업스크립트를 작동시키게 된다. (쿠키는 5초간 존재)


만약 쿠키가 사라지기 전인 5초내에 재접속(F5)을 시도한다면, 이 페이지를 서버에게 다시 요구하는 것이고, 서버는 또 쿠키를 조리한다. 그리고 쿠키출력문에서는 당연히 testCookie도 출력된다. 다만 56번줄이 true가 되므로 61번줄에서 70번줄은 실행되지 않도록
서버가 처리한 뒤에 클라이언트로 페이지를 보낸다(쿠키도 같이!)

-> 클라이언트는 쿠키와 페이지를 받고, 스크립트는 실행하지 않는다. (쿠키는 다시 5초의 수명을 가진다.)

따라서 연속적으로 새로고침을 한다면 팝업은 계속 뜨지 않는다. 쿠키가 존재하지 않는다면 팝업을 띄우는데, 사용자가 5초라는 수명을 가진 쿠키를 계속 갱신시키니까. 그리고 그 쿠키를 가지고 있다고 출력문에서도도 계속 출력 될테고.


5초가 지난 뒤에 페이지를 다시 요청하면, 쿠키는 사라져있는 상태이다. 서버는 다시 쿠키를 조리하고, 요청받은 페이지를 다시 작성해나아간다. 이 때 사용자의 쿠키값을 적어나아가는데 당연히 testCookie는 사라진 상태이므로 출력되지 않을 것이고, 
bool은 계속 false로 남아있게 된다. 따라서 팝업스크립트가 살려져있는 상태가 된다.
서버는 페이지와 함께 쿠키를 날리고 클라이언트는 팝업스크립트를 작동시켜 팝업이 다시 실행된다..



현재로서는 사용자가 x버튼을 눌러도 쿠키는 던져지므로 5초 내 재접속시 팝업창은 안뜸. 5초뒤에 재접속시 팝업창 뜸
24시간동안 열지않기를 눌러도.. 5초가 지나고 다시 페이지를 요청하면 팝업창이 뜨게 됨.

단순히 x를 누른경우 쿠키는 던져지지 않게 만들기. 그러면 재접속할때마다 서버는 "어? 너 쿠키 없네. 팝업스크립트 살려둘게"-> 팝업실행
~시간동안 안열겠다는 버튼 누르면 쿠키던져주도록 만들기. 그러면 그 시간내에 재접속 할 때 서버는 "어? 쿠키 가지고있구나. 팝업이 싫구나. 팝업스크립트 없애둘게" -> 팝업 미실행(당연히 안열겠다는 버튼을 누를 수도 없게되니 쿠키는 던져지지 않음. 따라서 기존의 쿠키만
살아있고, 그 유효시간이 계속 줄어드는 중)

아니면.. 쿠키가 존재하면 팝업을 띄우고 쿠키가 존재하지 않으면 팝업이 안뜨도록 만드는건?
아 그러면 처음방문시에 팝업이 안뜨겠구나. 좀더 복잡하게 되버리네

</body>
</html>